# ----------------------------------------------------------------------
# | Config file for example.com host and Magento 1                     |
# ----------------------------------------------------------------------
#
# This file is a template for an Nginx server.
# This Nginx server listens for the `example.com` host and handles requests.
# Replace `example.com` with your hostname before enabling.

# Maps config file
include magenx/conf_m1/maps.conf;

server {
  # listen [::]:443 ssl http2 accept_filter=dataready;  # for FreeBSD
  # listen 443 ssl http2 accept_filter=dataready;  # for FreeBSD
  listen [::]:443 ssl http2;
  listen 443 ssl http2;

  # The host name to respond to
  server_name example.com;

  include h5bp/ssl/ssl_engine.conf;
  include conf.d/sites/example.com/certificate_files.conf;
  include h5bp/ssl/policy_intermediate.conf;

  # Path for static files
  root /var/www/html;

  access_log /var/log/nginx/access.log main if=$writelog;
  error_log	/var/log/nginx/error.log error;

  if ($bad_client) { return 444; }

  # phpMyAdmin config
  include magenx/conf_m1/phpmyadmin.conf;

  location = /js/index.php/x.js {
    rewrite ^(.*\.php)/ $1 last;
  }

  # Main Magento @location
  location / {
    try_files $uri $uri/ @rewrite;
  }

  # Server maintenance block.
  # include magenx/conf_m1/maintenance.conf;
  # Error log/page
  # include magenx/conf_m1/error_page.conf;

  # Export folder
  include magenx/conf_m1/export.conf;

  # These locations are protected
  location ~ /(app|var|downloader|includes|pkginfo)/ {
    deny all;
  }

  # Extra protection and limits
  include magenx/conf_m1/extra_protect.conf;

  location @rewrite {
    rewrite / /index.php?$args;
  }

  # Execute PHP scripts
  location ~ \.php$ {
    try_files $uri =404;
    include magenx/conf_m1/php_backend.conf;
    # Store code with multi domain
    # fastcgi_param MAGE_RUN_CODE $mage_code;
    # fastcgi_param MAGE_RUN_TYPE $mage_type;
  }

  # Custom error pages
  include h5bp/errors/custom_errors.conf;

  # Include the basic h5bp config set
  include h5bp/basic.conf;

}

# Choose between www and non-www, listen on the wrong one and redirect to
# the right one.
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#server-name-if
server {
  listen [::]:443 ssl http2;
  listen 443 ssl http2;

  server_name www.example.com;

  include h5bp/ssl/ssl_engine.conf;
  include conf.d/sites/example.com/certificate_files.conf;
  include h5bp/ssl/policy_intermediate.conf;

  return 301 $scheme://example.com$request_uri;
}

# Choose between www and non-www, listen on the wrong one and redirect to
# the right one.
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#server-name-if
server {
  listen [::]:80;
  listen 80;

  # listen on both hosts
  server_name example.com www.example.com;

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://example.com$request_uri;
}
